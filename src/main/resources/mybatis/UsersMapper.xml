<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="users">
	<select id="findUserById" parameterType="int" resultType="users">
		select id,username,password from users where id = #{id}
    </select>
    <!-- 
    	parameterType 输入参数类型
    	resultType 输出结果的类型（单条记录所映射的java对象）
    	${} 表示拼接符 安全隐患：SQL注入 不建议使用
    	#{} 表示占位符
     -->
    <select id="findUsersByName" parameterType="string" resultType="users">
    	select * from users where username like '%${value}%'
    </select>
    
    <!-- 通过ognl获取对象的属性值 -->
    <insert id="addUser" parameterType="users">
    	<!--  
    	返回主键
    	keyProperty:将查询到的主键值设置到parameterType指定的对象的哪个属性中
    	order:selectKey中SQL语句的执行顺序
    	resultType:指定返回类型
    	-->
    	<selectKey keyProperty="id" order="AFTER" resultType="int">
    		<!--  
    			last_insert_id() 只能用于自增长
    		-->
    		select last_insert_id()
    	</selectKey>
    	
    	<!-- mysql使用 select uuid()来生成uuid主键-->
    	<!--先生成主键后再插入对应的脚本如下-->
    	<!-- 
    	<selectKey keyProperty="id" order="BEFORE" resultType="string">
    		select uuid()
    	</selectKey>
    	
    	insert into users (id,username,password) values(#{id},#{username},#{password});
    	 -->
    	insert into users (username,password) values(#{username},#{password});
    </insert>
    
    <update id="deleteUser" parameterType="int">
    	delete from users where id=#{id};
    </update>
    <delete id="updateUser" parameterType="users">
    	update users set username=#{username},password=#{password} where id=#{id}
    </delete>
    
</mapper>